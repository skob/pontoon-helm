apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pontoon-helm.fullname" . }}
  labels:
    {{- include "pontoon-helm.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "pontoon-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pontoon-helm.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "pontoon-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: staticdir
          emptyDir: {}
        - name: {{ template "pontoon-helm.name" . }}-nginx
          configMap:
            name: {{ template "pontoon-helm.name" . }}-nginx
            items:
            - key: nginx.conf
              path: nginx.conf
      initContainers:
        - name: populate-static
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: [ "cp", "-rp", "/app/static", "/migrate" ]
          volumeMounts:
          - name: staticdir
            mountPath: "/migrate"
      containers:
        - name: nginx
          image: nginxinc/nginx-unprivileged
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: nginx
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: {{ template "pontoon-helm.name" . }}-nginx
              mountPath: /etc/nginx/conf.d/
            - name: staticdir
              mountPath: /var/www
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["gunicorn", "pontoon.wsgi:application", "-t", "120", "--log-file", "-"]
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{ template "pontoon-helm.name" . }}
            - configMapRef:
                name: {{ template "pontoon-helm.name" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
